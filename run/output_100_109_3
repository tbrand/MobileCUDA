[TRACE -runtime-] __cudaRegisterFatBinary  
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] cudaMalloc               
Result test PASS
TIME RESULT : 32.830826[sec](MIK)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] cudaMalloc               
Result test PASS
TIME RESULT : 31.123896[sec](MIK)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
[TRACE -runtime-] __cudaRegisterFunction   
Received request from DAEMON
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 2: "Tesla K20c" with compute capability 3.5

MatrixA(14720,14720), MatrixB(14720,14720)
size A : 826
size B : 826
size C : 4
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 190.90 GFlop/s, Time= 33416.227 msec, Size= 6379012096000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 80.311813(matrixMulLarge)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
[TRACE -runtime-] __cudaRegisterFunction   
blockNum  : 48000
threadNum : 1024
size      : 196608000
vector size : 786432000
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaHostAlloc            
[TRACE -runtime-] cudaHostAlloc            
Result test PASS!
TIME RESULT : 90.803391(MEM SMALL)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 1: "Tesla K20c" with compute capability 3.5

MatrixA(11200,11200), MatrixB(11200,11200)
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 212.68 GFlop/s, Time= 52847.660 msec, Size= 2809856000000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
[TRACE -runtime-] cudaDeviceReset          
My RESULT : 100.757034(matrixMulSmall)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 3: "Tesla K20c" with compute capability 3.5

MatrixA(11200,11200), MatrixB(11200,11200)
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 128.28 GFlop/s, Time= 87618.062 msec, Size= 2809856000000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
[TRACE -runtime-] cudaDeviceReset          
My RESULT : 146.642227(matrixMulSmall)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 3: "Tesla K20c" with compute capability 3.5

MatrixA(14720,14720), MatrixB(14720,14720)
size A : 826
size B : 826
size C : 4
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 110.35 GFlop/s, Time= 57806.113 msec, Size= 6379012096000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 154.372803(matrixMulLarge)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 3: "Tesla K20c" with compute capability 3.5

MatrixA(11200,11200), MatrixB(11200,11200)
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 228.13 GFlop/s, Time= 49268.246 msec, Size= 2809856000000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
[TRACE -runtime-] cudaDeviceReset          
My RESULT : 146.699234(matrixMulSmall)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 2: "Tesla K20c" with compute capability 3.5

MatrixA(10240,10240), MatrixB(20480,10240)
size A : 400
size B : 800
size C : 4
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 220.19 GFlop/s, Time= 58517.117 msec, Size= 4294967296000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 176.539307(matrixMul)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 1: "Tesla K20c" with compute capability 3.5

MatrixA(10240,10240), MatrixB(20480,10240)
size A : 400
size B : 800
size C : 4
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 149.82 GFlop/s, Time= 86000.547 msec, Size= 4294967296000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 181.535889(matrixMul)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
[TRACE -runtime-] __cudaRegisterFunction   
blockNum  : 48000
threadNum : 1024
size      : 196608000
vector size : 786432000
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Result test PASS!
TIME RESULT : 185.031448(TEST SMALL)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] cudaSetDeviceFlags       
cudaSetDeviceFlags(0)
[TRACE -runtime-] cudaHostRegister         
cudaHostAlloc(0)
[TRACE -runtime-] cudaHostGetDevicePointer 
cudaHostGetDevicePointer(0)
device address : 0x200000000
cudaMemcpyHostToDevice(0)
[TRACE -runtime-] cudaMalloc               
cudaMalloc(0) : Address 0x2300200000
cudaMemcpyHostToDevice(0)
cudaMemcpyDeviceToHost(0)
Result test PASS
TIME RESULT : 193.563065[sec](MAP)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterVar        
[TRACE -runtime-] __cudaRegisterVar        
Vector SIZE : 976[Mbyte]
[TRACE -runtime-] cudaMemcpyToSymbol       
[TRACE -runtime-] cudaMemcpyToSymbol       
cudaMemcpyToSymbol(0)
[TRACE -runtime-] cudaMemcpyFromSymbol     
cudaMemcpyFromSymbol(0)
Result test : PASS
TIME RESULT : 195.421219[sec](DEV MEM)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 2: "Tesla K20c" with compute capability 3.5

MatrixA(10240,10240), MatrixB(20480,10240)
size A : 400
size B : 800
size C : 4
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 99.81 GFlop/s, Time= 129091.406 msec, Size= 4294967296000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 209.525192(matrixMul)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 2: "Tesla K20c" with compute capability 3.5

MatrixA(14720,14720), MatrixB(14720,14720)
size A : 826
size B : 826
size C : 4
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 247.78 GFlop/s, Time= 25745.100 msec, Size= 6379012096000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 229.356674(matrixMulLarge)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] cudaSetDeviceFlags       
cudaSetDeviceFlags(0)
[TRACE -runtime-] cudaHostRegister         
cudaHostAlloc(0)
[TRACE -runtime-] cudaHostGetDevicePointer 
cudaHostGetDevicePointer(0)
device address : 0x200000000
cudaMemcpyHostToDevice(0)
[TRACE -runtime-] cudaMalloc               
cudaMalloc(0) : Address 0x2300200000
cudaMemcpyHostToDevice(0)
cudaMemcpyDeviceToHost(0)
Result test PASS
TIME RESULT : 215.398346[sec](MAP)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
[TRACE -runtime-] __cudaRegisterFunction   
blockNum  : 32000
threadNum : 1024
size      : 262144000
vector size : 1048576000
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
d_a : 0x2300200000
d_b : 0x233ea00000
[TRACE -runtime-] cudaHostAlloc            
[TRACE -runtime-] cudaHostAlloc            
Result test PASS!
TIME RESULT : 232.062454[sec](MEM)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
[TRACE -runtime-] __cudaRegisterFunction   
blockNum  : 32000
threadNum : 1024
size      : 262144000
vector size : 1048576000
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
d_a : 0x2300200000
d_b : 0x233ea00000
[TRACE -runtime-] cudaHostAlloc            
[TRACE -runtime-] cudaHostAlloc            
Result test PASS!
TIME RESULT : 241.015213[sec](MEM)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
[TRACE -runtime-] __cudaRegisterFunction   
blockNum  : 32000
threadNum : 1024
size      : 262144000
vector size : 1048576000
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
d_a : 0x2300200000
d_b : 0x233ea00000
[TRACE -runtime-] cudaHostAlloc            
[TRACE -runtime-] cudaHostAlloc            
Result test PASS!
TIME RESULT : 231.913086[sec](MEM)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
[TRACE -runtime-] __cudaRegisterFunction   
blockNum  : 32000
threadNum : 1024
size      : 262144000
vector size : 1048576000
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Result test PASS!
TIME RESULT : 261.332733[sec](TEST)
[TRACE -runtime-] __cudaUnregisterFatBinary


Result Time : 283[sec]

PROC[0]
	Iden : 0
	Pid  : 19307
		TIME  : 231[sec]
		START : 09:51:47
		END   : 09:55:38
PROC[1]
	Iden : 0
	Pid  : 19308
		TIME  : 198[sec]
		START : 09:51:47
		END   : 09:55:05
PROC[2]
	Iden : 10
	Pid  : 19309
		TIME  : 54[sec]
		START : 09:51:47
		END   : 09:52:41
PROC[3]
	Iden : 1
	Pid  : 19310
		TIME  : 108[sec]
		START : 09:51:47
		END   : 09:53:35
PROC[4]
	Iden : 1
	Pid  : 19311
		TIME  : 176[sec]
		START : 09:51:47
		END   : 09:54:43
PROC[5]
	Iden : 8
	Pid  : 19312
		TIME  : 113[sec]
		START : 09:51:47
		END   : 09:53:40
PROC[6]
	Iden : 2
	Pid  : 19313
		TIME  : 122[sec]
		START : 09:51:47
		END   : 09:53:49
PROC[7]
	Iden : 3
	Pid  : 19314
		TIME  : 283[sec]
		START : 09:51:47
		END   : 09:56:30
PROC[8]
	Iden : 9
	Pid  : 19315
		TIME  : 218[sec]
		START : 09:51:47
		END   : 09:55:25
PROC[9]
	Iden : 0
	Pid  : 19316
		TIME  : 203[sec]
		START : 09:51:47
		END   : 09:55:10
PROC[10]
	Iden : 6
	Pid  : 19317
		TIME  : 263[sec]
		START : 09:51:47
		END   : 09:56:10
PROC[11]
	Iden : 11
	Pid  : 19318
		TIME  : 253[sec]
		START : 09:51:47
		END   : 09:56:00
PROC[12]
	Iden : 2
	Pid  : 19319
		TIME  : 185[sec]
		START : 09:51:47
		END   : 09:54:52
PROC[13]
	Iden : 1
	Pid  : 19320
		TIME  : 251[sec]
		START : 09:51:47
		END   : 09:55:58
PROC[14]
	Iden : 11
	Pid  : 19321
		TIME  : 215[sec]
		START : 09:51:47
		END   : 09:55:22
PROC[15]
	Iden : 2
	Pid  : 19322
		TIME  : 168[sec]
		START : 09:51:47
		END   : 09:54:35
PROC[16]
	Iden : 6
	Pid  : 19323
		TIME  : 254[sec]
		START : 09:51:47
		END   : 09:56:01
PROC[17]
	Iden : 6
	Pid  : 19324
		TIME  : 270[sec]
		START : 09:51:47
		END   : 09:56:17
PROC[18]
	Iden : 10
	Pid  : 19325
		TIME  : 69[sec]
		START : 09:51:47
		END   : 09:52:56
PROC[19]
	Iden : 5
	Pid  : 19326
		TIME  : 207[sec]
		START : 09:51:47
		END   : 09:55:14
