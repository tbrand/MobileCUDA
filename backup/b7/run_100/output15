[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x408b68
fatCubinHandle : 0x1e01a60
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 0: "Tesla K20c" with compute capability 3.5

MatrixA(10240,10240), MatrixB(20480,10240)
size A : 400
size B : 800
size C : 4
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaDeviceSynchronize    
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 243.02 GFlop/s, Time= 88368.109 msec, Size= 4294967296000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 141.969131(matrixMul)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x401ca0
fatCubinHandle : 0x7e74c0
[TRACE -runtime-] __cudaRegisterFunction   
gyouretu size : 225000000
[TRACE -runtime-] cudaSetDevice            
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaHostAlloc            
cudaHostAlloc : 0
[TRACE -runtime-] cudaHostAlloc            
cudaHostAlloc : 0
This Sample Application Uses 858[Mbyte] per vector.(Total : 1716[Mbyte])
>Result TEST : PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFreeHost             
[TRACE -runtime-] cudaFreeHost             
Application Closed...
My RESULT : 143.205063
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x401ca0
fatCubinHandle : 0x16834c0
[TRACE -runtime-] __cudaRegisterFunction   
gyouretu size : 225000000
[TRACE -runtime-] cudaSetDevice            
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaHostAlloc            
cudaHostAlloc : 0
[TRACE -runtime-] cudaHostAlloc            
cudaHostAlloc : 0
This Sample Application Uses 858[Mbyte] per vector.(Total : 1716[Mbyte])
>Result TEST : PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFreeHost             
[TRACE -runtime-] cudaFreeHost             
Application Closed...
My RESULT : 214.271454
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x401ca0
fatCubinHandle : 0x9004c0
[TRACE -runtime-] __cudaRegisterFunction   
gyouretu size : 225000000
[TRACE -runtime-] cudaSetDevice            
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaHostAlloc            
cudaHostAlloc : 0
[TRACE -runtime-] cudaHostAlloc            
cudaHostAlloc : 0
This Sample Application Uses 858[Mbyte] per vector.(Total : 1716[Mbyte])
>Result TEST : PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFreeHost             
[TRACE -runtime-] cudaFreeHost             
Application Closed...
My RESULT : 215.484726
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x408b68
fatCubinHandle : 0x186fa60
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 0: "Tesla K20c" with compute capability 3.5

MatrixA(10240,10240), MatrixB(20480,10240)
size A : 400
size B : 800
size C : 4
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaDeviceSynchronize    
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 128.93 GFlop/s, Time= 166564.078 msec, Size= 4294967296000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 218.449936(matrixMul)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x408b68
fatCubinHandle : 0xf1ca60
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 0: "Tesla K20c" with compute capability 3.5

MatrixA(10240,10240), MatrixB(20480,10240)
size A : 400
size B : 800
size C : 4
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaDeviceSynchronize    
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 130.19 GFlop/s, Time= 164950.578 msec, Size= 4294967296000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 218.861847(matrixMul)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x408b68
fatCubinHandle : 0xa29a60
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 0: "Tesla K20c" with compute capability 3.5

MatrixA(10240,10240), MatrixB(20480,10240)
size A : 400
size B : 800
size C : 4
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaDeviceSynchronize    
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 128.93 GFlop/s, Time= 166567.328 msec, Size= 4294967296000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 220.889648(matrixMul)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x408b68
fatCubinHandle : 0xb97a60
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 0: "Tesla K20c" with compute capability 3.5

MatrixA(10240,10240), MatrixB(20480,10240)
size A : 400
size B : 800
size C : 4
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaDeviceSynchronize    
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 130.10 GFlop/s, Time= 165070.031 msec, Size= 4294967296000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 221.474762(matrixMul)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x408b68
fatCubinHandle : 0x1ed0a60
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 0: "Tesla K20c" with compute capability 3.5

MatrixA(10240,10240), MatrixB(20480,10240)
size A : 400
size B : 800
size C : 4
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaDeviceSynchronize    
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 235.42 GFlop/s, Time= 91218.461 msec, Size= 4294967296000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 124.883591(matrixMul)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x401ca0
fatCubinHandle : 0x18914c0
[TRACE -runtime-] __cudaRegisterFunction   
gyouretu size : 225000000
[TRACE -runtime-] cudaSetDevice            
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaHostAlloc            
cudaHostAlloc : 0
[TRACE -runtime-] cudaHostAlloc            
cudaHostAlloc : 0
This Sample Application Uses 858[Mbyte] per vector.(Total : 1716[Mbyte])
>Result TEST : PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFreeHost             
[TRACE -runtime-] cudaFreeHost             
Application Closed...
My RESULT : 159.676422
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x408b68
fatCubinHandle : 0xdd3a60
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 0: "Tesla K20c" with compute capability 3.5

MatrixA(10240,10240), MatrixB(20480,10240)
size A : 400
size B : 800
size C : 4
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaDeviceSynchronize    
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 242.91 GFlop/s, Time= 88406.656 msec, Size= 4294967296000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 123.097260(matrixMul)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x401ca0
fatCubinHandle : 0x25f94c0
[TRACE -runtime-] __cudaRegisterFunction   
gyouretu size : 225000000
[TRACE -runtime-] cudaSetDevice            
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaHostAlloc            
cudaHostAlloc : 0
[TRACE -runtime-] cudaHostAlloc            
cudaHostAlloc : 0
This Sample Application Uses 858[Mbyte] per vector.(Total : 1716[Mbyte])
>Result TEST : PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFreeHost             
[TRACE -runtime-] cudaFreeHost             
Application Closed...
My RESULT : 150.364334
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x408b68
fatCubinHandle : 0xdcfa60
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 0: "Tesla K20c" with compute capability 3.5

MatrixA(10240,10240), MatrixB(20480,10240)
size A : 400
size B : 800
size C : 4
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaDeviceSynchronize    
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 235.17 GFlop/s, Time= 91315.156 msec, Size= 4294967296000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 145.808701(matrixMul)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x408b68
fatCubinHandle : 0x199ea60
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 0: "Tesla K20c" with compute capability 3.5

MatrixA(10240,10240), MatrixB(20480,10240)
size A : 400
size B : 800
size C : 4
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaDeviceSynchronize    
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 128.60 GFlop/s, Time= 166989.703 msec, Size= 4294967296000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 205.303131(matrixMul)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x408b68
fatCubinHandle : 0x1e7ba60
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 0: "Tesla K20c" with compute capability 3.5

MatrixA(10240,10240), MatrixB(20480,10240)
size A : 400
size B : 800
size C : 4
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaDeviceSynchronize    
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 132.32 GFlop/s, Time= 162296.547 msec, Size= 4294967296000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 205.204849(matrixMul)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x408b68
fatCubinHandle : 0xbb1a60
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 0: "Tesla K20c" with compute capability 3.5

MatrixA(10240,10240), MatrixB(20480,10240)
size A : 400
size B : 800
size C : 4
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaDeviceSynchronize    
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 128.96 GFlop/s, Time= 166517.359 msec, Size= 4294967296000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 206.442062(matrixMul)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x408b68
fatCubinHandle : 0x1e6ba60
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 0: "Tesla K20c" with compute capability 3.5

MatrixA(10240,10240), MatrixB(20480,10240)
size A : 400
size B : 800
size C : 4
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaDeviceSynchronize    
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 132.31 GFlop/s, Time= 162311.656 msec, Size= 4294967296000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 205.350555(matrixMul)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x401ca0
fatCubinHandle : 0x23254c0
[TRACE -runtime-] __cudaRegisterFunction   
gyouretu size : 225000000
[TRACE -runtime-] cudaSetDevice            
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaHostAlloc            
cudaHostAlloc : 0
[TRACE -runtime-] cudaHostAlloc            
cudaHostAlloc : 0
This Sample Application Uses 858[Mbyte] per vector.(Total : 1716[Mbyte])
>Result TEST : PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFreeHost             
[TRACE -runtime-] cudaFreeHost             
Application Closed...
My RESULT : 137.765488
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x401ca0
fatCubinHandle : 0x194e4c0
[TRACE -runtime-] __cudaRegisterFunction   
gyouretu size : 225000000
[TRACE -runtime-] cudaSetDevice            
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaHostAlloc            
cudaHostAlloc : 0
[TRACE -runtime-] cudaHostAlloc            
cudaHostAlloc : 0
This Sample Application Uses 858[Mbyte] per vector.(Total : 1716[Mbyte])
>Result TEST : PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFreeHost             
[TRACE -runtime-] cudaFreeHost             
Application Closed...
My RESULT : 160.911240
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x408b68
fatCubinHandle : 0x14c5a60
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 0: "Tesla K20c" with compute capability 3.5

MatrixA(10240,10240), MatrixB(20480,10240)
size A : 400
size B : 800
size C : 4
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaDeviceSynchronize    
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 243.04 GFlop/s, Time= 88360.414 msec, Size= 4294967296000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 140.435959(matrixMul)
[TRACE -runtime-] __cudaUnregisterFatBinary
16:56:30
--------------
16:56:30
matrixMul to 0
memcpy    to 1
--------------
Process 1 launch.
--------------
16:56:30
matrixMul to 1
memcpy    to 1
--------------
Process 2 launch.
--------------
16:56:30
matrixMul to 2
memcpy    to 1
--------------
Process 3 launch.
--------------
16:56:30
matrixMul to 3
memcpy    to 1
--------------
Process 4 launch.
--------------
16:56:30
matrixMul to 4
memcpy    to 1
--------------
Process 5 launch.
--------------
16:56:30
matrixMul to 4
memcpy    to 2
--------------
Process 6 launch.
--------------
16:56:30
matrixMul to 4
memcpy    to 3
--------------
Process 7 launch.
--------------
16:56:30
matrixMul to 5
memcpy    to 3
--------------
Process 8 launch.
First Step End...
--------------
16:59:01
matrixMul to 4
memcpy    to 3
--------------
Process 1 finished.
--------------
16:59:01
matrixMul to 4
memcpy    to 4
--------------
Process 9 launch.
--------------
16:59:02
matrixMul to 4
memcpy    to 3
--------------
Process 2 finished.
--------------
16:59:02
matrixMul to 5
memcpy    to 3
--------------
Process 10 launch.
--------------
17:00:13
matrixMul to 5
memcpy    to 2
--------------
Process 3 finished.
--------------
17:00:13
matrixMul to 6
memcpy    to 2
--------------
Process 11 launch.
--------------
17:00:14
matrixMul to 6
memcpy    to 1
--------------
Process 4 finished.
--------------
17:00:14
matrixMul to 7
memcpy    to 1
--------------
Process 12 launch.
--------------
17:00:17
matrixMul to 6
memcpy    to 1
--------------
Process 5 finished.
--------------
17:00:17
matrixMul to 6
memcpy    to 2
--------------
Process 13 launch.
--------------
17:00:18
matrixMul to 5
memcpy    to 2
--------------
Process 6 finished.
--------------
17:00:18
matrixMul to 6
memcpy    to 2
--------------
Process 14 launch.
--------------
17:00:20
matrixMul to 5
memcpy    to 2
--------------
Process 7 finished.
--------------
17:00:20
matrixMul to 6
memcpy    to 2
--------------
Process 15 launch.
--------------
17:00:20
matrixMul to 5
memcpy    to 2
--------------
Process 8 finished.
--------------
17:00:20
matrixMul to 6
memcpy    to 2
--------------
Process 16 launch.
--------------
17:01:08
matrixMul to 5
memcpy    to 2
--------------
Process 9 finished.
--------------
17:01:08
matrixMul to 6
memcpy    to 2
--------------
Process 17 launch.
--------------
17:01:41
matrixMul to 6
memcpy    to 1
--------------
Process 10 finished.
--------------
17:01:41
matrixMul to 6
memcpy    to 2
--------------
Process 18 launch.
--------------
17:02:25
matrixMul to 5
memcpy    to 2
--------------
Process 11 finished.
--------------
17:02:25
matrixMul to 5
memcpy    to 3
--------------
Process 19 launch.
--------------
17:02:49
matrixMul to 5
memcpy    to 2
--------------
Process 12 finished.
--------------
17:02:49
matrixMul to 6
memcpy    to 2
--------------
Process 20 launch.
Second Step End...
--------------
17:03:34
matrixMul to 5
memcpy    to 2
--------------
Process 13 finished.
pid == 27653 finish ... 
--------------
17:03:39
matrixMul to 4
memcpy    to 2
--------------
Process 14 finished.
pid == 27608 finish ... 
--------------
17:03:40
matrixMul to 3
memcpy    to 2
--------------
Process 15 finished.
pid == 27609 finish ... 
--------------
17:03:46
matrixMul to 2
memcpy    to 2
--------------
Process 16 finished.
pid == 27613 finish ... 
--------------
17:03:47
matrixMul to 1
memcpy    to 2
--------------
Process 17 finished.
pid == 27618 finish ... 
--------------
17:04:00
matrixMul to 1
memcpy    to 1
--------------
Process 18 finished.
pid == 27663 finish ... 
--------------
17:05:07
matrixMul to 1
memcpy    to 0
--------------
Process 19 finished.
pid == 27668 finish ... 
--------------
17:05:10
matrixMul to 0
memcpy    to 0
--------------
Process 20 finished.
pid == 27678 finish ... 
Every processes completed!
Result time : 520.000000[sec]
17:05:10
PID == 27545
pos : 0
Proc : 1
Start : 0(0)
End   : 224
Time  : 224(179)
PID == 27546
pos : 1
Proc : 0
Start : 0(0)
End   : 230
Time  : 230(184)
PID == 27547
pos : 2
Proc : 0
Start : 0(0)
End   : 230
Time  : 230(184)
PID == 27548
pos : 3
Proc : 0
Start : 0(0)
End   : 151
Time  : 151(120)
PID == 27549
pos : 4
Proc : 0
Start : 0(0)
End   : 228
Time  : 228(182)
PID == 27550
pos : 5
Proc : 1
Start : 0(0)
End   : 152
Time  : 152(121)
PID == 27551
pos : 6
Proc : 1
Start : 0(0)
End   : 223
Time  : 223(178)
PID == 27552
pos : 7
Proc : 0
Start : 0(0)
End   : 227
Time  : 227(181)
PID == 27591
pos : 8
Proc : 1
Start : 151(120)
End   : 311
Time  : 160(128)
PID == 27593
pos : 9
Proc : 0
Start : 152(121)
End   : 278
Time  : 126(100)
PID == 27608
pos : 10
Proc : 0
Start : 223(178)
End   : 429
Time  : 206(164)
PID == 27609
pos : 11
Proc : 0
Start : 224(179)
End   : 430
Time  : 206(164)
PID == 27612
pos : 12
Proc : 1
Start : 227(181)
End   : 379
Time  : 152(121)
PID == 27613
pos : 13
Proc : 0
Start : 228(182)
End   : 436
Time  : 208(166)
PID == 27616
pos : 14
Proc : 0
Start : 230(184)
End   : 355
Time  : 125(100)
PID == 27618
pos : 15
Proc : 0
Start : 230(184)
End   : 437
Time  : 207(165)
PID == 27653
pos : 16
Proc : 0
Start : 278(222)
End   : 424
Time  : 146(116)
PID == 27663
pos : 17
Proc : 1
Start : 311(248)
End   : 450
Time  : 139(111)
PID == 27668
pos : 18
Proc : 1
Start : 355(284)
End   : 517
Time  : 162(129)
PID == 27678
pos : 19
Proc : 0
Start : 379(303)
End   : 520
Time  : 141(112)
matrixMul       : 13
memcpyIteration : 7
