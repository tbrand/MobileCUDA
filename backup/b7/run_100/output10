[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x408b68
fatCubinHandle : 0x13a0270
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 0: "Tesla K20c" with compute capability 3.5

MatrixA(10240,10240), MatrixB(20480,10240)
size A : 400
size B : 800
size C : 4
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaDeviceSynchronize    
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 243.04 GFlop/s, Time= 88359.375 msec, Size= 4294967296000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 126.311836(matrixMul)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x401ca0
fatCubinHandle : 0x144acd0
[TRACE -runtime-] __cudaRegisterFunction   
gyouretu size : 225000000
[TRACE -runtime-] cudaSetDevice            
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaHostAlloc            
cudaHostAlloc : 0
[TRACE -runtime-] cudaHostAlloc            
cudaHostAlloc : 0
This Sample Application Uses 858[Mbyte] per vector.(Total : 1716[Mbyte])
>Result TEST : PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFreeHost             
[TRACE -runtime-] cudaFreeHost             
Application Closed...
My RESULT : 142.509644
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x408b68
fatCubinHandle : 0x1c9b270
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 0: "Tesla K20c" with compute capability 3.5

MatrixA(10240,10240), MatrixB(20480,10240)
size A : 400
size B : 800
size C : 4
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaDeviceSynchronize    
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 128.92 GFlop/s, Time= 166573.734 msec, Size= 4294967296000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 210.363708(matrixMul)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x408b68
fatCubinHandle : 0x1238270
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 0: "Tesla K20c" with compute capability 3.5

MatrixA(10240,10240), MatrixB(20480,10240)
size A : 400
size B : 800
size C : 4
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaDeviceSynchronize    
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 130.04 GFlop/s, Time= 165140.844 msec, Size= 4294967296000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 210.862396(matrixMul)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x408b68
fatCubinHandle : 0x1586270
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 0: "Tesla K20c" with compute capability 3.5

MatrixA(10240,10240), MatrixB(20480,10240)
size A : 400
size B : 800
size C : 4
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaDeviceSynchronize    
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 128.93 GFlop/s, Time= 166563.219 msec, Size= 4294967296000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 211.235229(matrixMul)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x408b68
fatCubinHandle : 0x806270
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 0: "Tesla K20c" with compute capability 3.5

MatrixA(10240,10240), MatrixB(20480,10240)
size A : 400
size B : 800
size C : 4
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaDeviceSynchronize    
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 129.88 GFlop/s, Time= 165349.359 msec, Size= 4294967296000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 211.675278(matrixMul)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x401ca0
fatCubinHandle : 0x20e8cd0
[TRACE -runtime-] __cudaRegisterFunction   
gyouretu size : 225000000
[TRACE -runtime-] cudaSetDevice            
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaHostAlloc            
cudaHostAlloc : 0
[TRACE -runtime-] cudaHostAlloc            
cudaHostAlloc : 0
This Sample Application Uses 858[Mbyte] per vector.(Total : 1716[Mbyte])
>Result TEST : PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFreeHost             
[TRACE -runtime-] cudaFreeHost             
Application Closed...
My RESULT : 215.197845
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x401ca0
fatCubinHandle : 0x19accd0
[TRACE -runtime-] __cudaRegisterFunction   
gyouretu size : 225000000
[TRACE -runtime-] cudaSetDevice            
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaHostAlloc            
cudaHostAlloc : 0
[TRACE -runtime-] cudaHostAlloc            
cudaHostAlloc : 0
This Sample Application Uses 858[Mbyte] per vector.(Total : 1716[Mbyte])
>Result TEST : PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFreeHost             
[TRACE -runtime-] cudaFreeHost             
Application Closed...
My RESULT : 215.762299
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x408b68
fatCubinHandle : 0xfda270
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 0: "Tesla K20c" with compute capability 3.5

MatrixA(10240,10240), MatrixB(20480,10240)
size A : 400
size B : 800
size C : 4
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaDeviceSynchronize    
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 238.28 GFlop/s, Time= 90123.133 msec, Size= 4294967296000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 124.655678(matrixMul)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x401ca0
fatCubinHandle : 0x1041cd0
[TRACE -runtime-] __cudaRegisterFunction   
gyouretu size : 225000000
[TRACE -runtime-] cudaSetDevice            
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaHostAlloc            
cudaHostAlloc : 0
[TRACE -runtime-] cudaHostAlloc            
cudaHostAlloc : 0
This Sample Application Uses 858[Mbyte] per vector.(Total : 1716[Mbyte])
>Result TEST : PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFreeHost             
[TRACE -runtime-] cudaFreeHost             
Application Closed...
My RESULT : 169.412369
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x408b68
fatCubinHandle : 0x764270
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 0: "Tesla K20c" with compute capability 3.5

MatrixA(10240,10240), MatrixB(20480,10240)
size A : 400
size B : 800
size C : 4
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[REPLAY] cudaMalloc               
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaDeviceSynchronize    
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 242.71 GFlop/s, Time= 88480.617 msec, Size= 4294967296000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 136.149628(matrixMul)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x401ca0
fatCubinHandle : 0x1b2fcd0
[TRACE -runtime-] __cudaRegisterFunction   
gyouretu size : 225000000
[TRACE -runtime-] cudaSetDevice            
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaHostAlloc            
cudaHostAlloc : 0
[TRACE -runtime-] cudaHostAlloc            
cudaHostAlloc : 0
This Sample Application Uses 858[Mbyte] per vector.(Total : 1716[Mbyte])
>Result TEST : PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFreeHost             
[TRACE -runtime-] cudaFreeHost             
Application Closed...
My RESULT : 138.781189
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x408b68
fatCubinHandle : 0xbc7270
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 0: "Tesla K20c" with compute capability 3.5

MatrixA(10240,10240), MatrixB(20480,10240)
size A : 400
size B : 800
size C : 4
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaDeviceSynchronize    
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 235.93 GFlop/s, Time= 91023.812 msec, Size= 4294967296000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 146.609375(matrixMul)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x408b68
fatCubinHandle : 0x16ec270
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 0: "Tesla K20c" with compute capability 3.5

MatrixA(10240,10240), MatrixB(20480,10240)
size A : 400
size B : 800
size C : 4
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaDeviceSynchronize    
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 128.60 GFlop/s, Time= 166984.672 msec, Size= 4294967296000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 204.124039(matrixMul)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x408b68
fatCubinHandle : 0x145c270
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 0: "Tesla K20c" with compute capability 3.5

MatrixA(10240,10240), MatrixB(20480,10240)
size A : 400
size B : 800
size C : 4
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaDeviceSynchronize    
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 135.70 GFlop/s, Time= 158248.359 msec, Size= 4294967296000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 203.282104(matrixMul)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x408b68
fatCubinHandle : 0x2358270
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 0: "Tesla K20c" with compute capability 3.5

MatrixA(10240,10240), MatrixB(20480,10240)
size A : 400
size B : 800
size C : 4
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaDeviceSynchronize    
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 128.96 GFlop/s, Time= 166522.172 msec, Size= 4294967296000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 206.401672(matrixMul)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x408b68
fatCubinHandle : 0x62e270
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 0: "Tesla K20c" with compute capability 3.5

MatrixA(10240,10240), MatrixB(20480,10240)
size A : 400
size B : 800
size C : 4
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaDeviceSynchronize    
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 131.73 GFlop/s, Time= 163026.922 msec, Size= 4294967296000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 212.259933(matrixMul)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x401ca0
fatCubinHandle : 0x1aafcd0
[TRACE -runtime-] __cudaRegisterFunction   
gyouretu size : 225000000
[TRACE -runtime-] cudaSetDevice            
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaHostAlloc            
cudaHostAlloc : 0
[TRACE -runtime-] cudaHostAlloc            
cudaHostAlloc : 0
This Sample Application Uses 858[Mbyte] per vector.(Total : 1716[Mbyte])
>Result TEST : PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFreeHost             
[TRACE -runtime-] cudaFreeHost             
Application Closed...
My RESULT : 138.240723
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x408b68
fatCubinHandle : 0x2312270
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 0: "Tesla K20c" with compute capability 3.5

MatrixA(10240,10240), MatrixB(20480,10240)
size A : 400
size B : 800
size C : 4
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaDeviceSynchronize    
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 242.74 GFlop/s, Time= 88467.844 msec, Size= 4294967296000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 123.209435(matrixMul)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x401ca0
fatCubinHandle : 0x1310cd0
[TRACE -runtime-] __cudaRegisterFunction   
gyouretu size : 225000000
[TRACE -runtime-] cudaSetDevice            
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaHostAlloc            
cudaHostAlloc : 0
[TRACE -runtime-] cudaHostAlloc            
cudaHostAlloc : 0
This Sample Application Uses 858[Mbyte] per vector.(Total : 1716[Mbyte])
>Result TEST : PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFreeHost             
[TRACE -runtime-] cudaFreeHost             
Application Closed...
My RESULT : 148.118225
[TRACE -runtime-] __cudaUnregisterFatBinary
18:35:23
--------------
18:35:23
matrixMul to 0
memcpy    to 1
--------------
Process 1 launch.
--------------
18:35:23
matrixMul to 1
memcpy    to 1
--------------
Process 2 launch.
--------------
18:35:23
matrixMul to 2
memcpy    to 1
--------------
Process 3 launch.
--------------
18:35:23
matrixMul to 3
memcpy    to 1
--------------
Process 4 launch.
--------------
18:35:23
matrixMul to 4
memcpy    to 1
--------------
Process 5 launch.
--------------
18:35:23
matrixMul to 4
memcpy    to 2
--------------
Process 6 launch.
--------------
18:35:23
matrixMul to 4
memcpy    to 3
--------------
Process 7 launch.
--------------
18:35:23
matrixMul to 5
memcpy    to 3
--------------
Process 8 launch.
First Step End...
--------------
18:37:39
matrixMul to 4
memcpy    to 3
--------------
Process 1 finished.
--------------
18:37:39
matrixMul to 4
memcpy    to 4
--------------
Process 9 launch.
--------------
18:37:55
matrixMul to 4
memcpy    to 3
--------------
Process 2 finished.
--------------
18:37:55
matrixMul to 5
memcpy    to 3
--------------
Process 10 launch.
--------------
18:39:03
matrixMul to 4
memcpy    to 3
--------------
Process 3 finished.
--------------
18:39:03
matrixMul to 5
memcpy    to 3
--------------
Process 11 launch.
--------------
18:39:03
matrixMul to 4
memcpy    to 3
--------------
Process 4 finished.
--------------
18:39:03
matrixMul to 5
memcpy    to 3
--------------
Process 12 launch.
--------------
18:39:04
matrixMul to 4
memcpy    to 3
--------------
Process 5 finished.
--------------
18:39:04
matrixMul to 4
memcpy    to 4
--------------
Process 13 launch.
--------------
18:39:04
matrixMul to 3
memcpy    to 4
--------------
Process 6 finished.
--------------
18:39:04
matrixMul to 4
memcpy    to 4
--------------
Process 14 launch.
--------------
18:39:08
matrixMul to 4
memcpy    to 3
--------------
Process 7 finished.
--------------
18:39:08
matrixMul to 5
memcpy    to 3
--------------
Process 15 launch.
--------------
18:39:08
matrixMul to 5
memcpy    to 2
--------------
Process 8 finished.
--------------
18:39:08
matrixMul to 6
memcpy    to 2
--------------
Process 16 launch.
--------------
18:40:01
matrixMul to 5
memcpy    to 2
--------------
Process 9 finished.
--------------
18:40:01
matrixMul to 6
memcpy    to 2
--------------
Process 17 launch.
--------------
18:40:29
matrixMul to 6
memcpy    to 1
--------------
Process 10 finished.
--------------
18:40:29
matrixMul to 6
memcpy    to 2
--------------
Process 18 launch.
--------------
18:41:22
matrixMul to 5
memcpy    to 2
--------------
Process 11 finished.
--------------
18:41:22
matrixMul to 5
memcpy    to 3
--------------
Process 19 launch.
--------------
18:41:25
matrixMul to 5
memcpy    to 2
--------------
Process 12 finished.
--------------
18:41:25
matrixMul to 6
memcpy    to 2
--------------
Process 20 launch.
Second Step End...
--------------
18:42:28
matrixMul to 5
memcpy    to 2
--------------
Process 13 finished.
pid == 14898 finish ... 
--------------
18:42:31
matrixMul to 4
memcpy    to 2
--------------
Process 14 finished.
pid == 14874 finish ... 
--------------
18:42:34
matrixMul to 3
memcpy    to 2
--------------
Process 15 finished.
pid == 14881 finish ... 
--------------
18:42:37
matrixMul to 2
memcpy    to 2
--------------
Process 16 finished.
pid == 14882 finish ... 
--------------
18:42:38
matrixMul to 1
memcpy    to 2
--------------
Process 17 finished.
pid == 14871 finish ... 
--------------
18:42:48
matrixMul to 1
memcpy    to 1
--------------
Process 18 finished.
pid == 14908 finish ... 
--------------
18:43:29
matrixMul to 0
memcpy    to 1
--------------
Process 19 finished.
pid == 14922 finish ... 
--------------
18:43:52
matrixMul to 0
memcpy    to 0
--------------
Process 20 finished.
pid == 14919 finish ... 
Every processes completed!
Result time : 509.000000[sec]
18:43:52
PID == 14810
pos : 0
Proc : 1
Start : 0(0)
End   : 152
Time  : 152(121)
PID == 14811
pos : 1
Proc : 0
Start : 0(0)
End   : 136
Time  : 136(108)
PID == 14812
pos : 2
Proc : 0
Start : 0(0)
End   : 220
Time  : 220(176)
PID == 14813
pos : 3
Proc : 0
Start : 0(0)
End   : 221
Time  : 221(176)
PID == 14814
pos : 4
Proc : 0
Start : 0(0)
End   : 220
Time  : 220(176)
PID == 14815
pos : 5
Proc : 1
Start : 0(0)
End   : 225
Time  : 225(180)
PID == 14816
pos : 6
Proc : 1
Start : 0(0)
End   : 225
Time  : 225(180)
PID == 14817
pos : 7
Proc : 0
Start : 0(0)
End   : 221
Time  : 221(176)
PID == 14850
pos : 8
Proc : 1
Start : 136(108)
End   : 306
Time  : 170(136)
PID == 14858
pos : 9
Proc : 0
Start : 152(121)
End   : 278
Time  : 126(100)
PID == 14871
pos : 10
Proc : 0
Start : 220(176)
End   : 435
Time  : 215(172)
PID == 14872
pos : 11
Proc : 0
Start : 220(176)
End   : 359
Time  : 139(111)
PID == 14873
pos : 12
Proc : 1
Start : 221(176)
End   : 362
Time  : 141(112)
PID == 14874
pos : 13
Proc : 0
Start : 221(176)
End   : 428
Time  : 207(165)
PID == 14881
pos : 14
Proc : 0
Start : 225(180)
End   : 431
Time  : 206(164)
PID == 14882
pos : 15
Proc : 0
Start : 225(180)
End   : 434
Time  : 209(167)
PID == 14898
pos : 16
Proc : 0
Start : 278(222)
End   : 425
Time  : 147(117)
PID == 14908
pos : 17
Proc : 1
Start : 306(244)
End   : 445
Time  : 139(111)
PID == 14919
pos : 18
Proc : 1
Start : 359(287)
End   : 509
Time  : 150(120)
PID == 14922
pos : 19
Proc : 0
Start : 362(289)
End   : 486
Time  : 124(99)
matrixMul       : 13
memcpyIteration : 7
