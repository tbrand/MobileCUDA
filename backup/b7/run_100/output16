[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x408b68
fatCubinHandle : 0x62da60
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 0: "Tesla K20c" with compute capability 3.5

MatrixA(10240,10240), MatrixB(20480,10240)
size A : 400
size B : 800
size C : 4
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaDeviceSynchronize    
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 243.05 GFlop/s, Time= 88354.625 msec, Size= 4294967296000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 125.280205(matrixMul)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x408b68
fatCubinHandle : 0x2139a60
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 0: "Tesla K20c" with compute capability 3.5

MatrixA(10240,10240), MatrixB(20480,10240)
size A : 400
size B : 800
size C : 4
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaDeviceSynchronize    
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 243.02 GFlop/s, Time= 88365.672 msec, Size= 4294967296000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 127.522385(matrixMul)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x401ca0
fatCubinHandle : 0xea54c0
[TRACE -runtime-] __cudaRegisterFunction   
gyouretu size : 225000000
[TRACE -runtime-] cudaSetDevice            
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaHostAlloc            
cudaHostAlloc : 0
[TRACE -runtime-] cudaHostAlloc            
cudaHostAlloc : 0
This Sample Application Uses 858[Mbyte] per vector.(Total : 1716[Mbyte])
>Result TEST : PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFreeHost             
[TRACE -runtime-] cudaFreeHost             
Application Closed...
My RESULT : 137.366013
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x408b68
fatCubinHandle : 0x1208a60
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 0: "Tesla K20c" with compute capability 3.5

MatrixA(10240,10240), MatrixB(20480,10240)
size A : 400
size B : 800
size C : 4
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaDeviceSynchronize    
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 242.59 GFlop/s, Time= 88522.336 msec, Size= 4294967296000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 136.353546(matrixMul)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x401ca0
fatCubinHandle : 0x123d4c0
[TRACE -runtime-] __cudaRegisterFunction   
gyouretu size : 225000000
[TRACE -runtime-] cudaSetDevice            
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaHostAlloc            
cudaHostAlloc : 0
[TRACE -runtime-] cudaHostAlloc            
cudaHostAlloc : 0
This Sample Application Uses 858[Mbyte] per vector.(Total : 1716[Mbyte])
>Result TEST : PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFreeHost             
[TRACE -runtime-] cudaFreeHost             
Application Closed...
My RESULT : 139.389862
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x401ca0
fatCubinHandle : 0x1a734c0
[TRACE -runtime-] __cudaRegisterFunction   
gyouretu size : 225000000
[TRACE -runtime-] cudaSetDevice            
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaHostAlloc            
cudaHostAlloc : 0
[TRACE -runtime-] cudaHostAlloc            
cudaHostAlloc : 0
This Sample Application Uses 858[Mbyte] per vector.(Total : 1716[Mbyte])
>Result TEST : PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFreeHost             
[TRACE -runtime-] cudaFreeHost             
Application Closed...
My RESULT : 148.426178
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x408b68
fatCubinHandle : 0x1c57a60
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 0: "Tesla K20c" with compute capability 3.5

MatrixA(10240,10240), MatrixB(20480,10240)
size A : 400
size B : 800
size C : 4
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaDeviceSynchronize    
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 128.99 GFlop/s, Time= 166490.203 msec, Size= 4294967296000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 209.608536(matrixMul)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x408b68
fatCubinHandle : 0x18d6a60
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 0: "Tesla K20c" with compute capability 3.5

MatrixA(10240,10240), MatrixB(20480,10240)
size A : 400
size B : 800
size C : 4
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaDeviceSynchronize    
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 133.09 GFlop/s, Time= 161358.672 msec, Size= 4294967296000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 210.627045(matrixMul)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x408b68
fatCubinHandle : 0x14cea60
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 0: "Tesla K20c" with compute capability 3.5

MatrixA(10240,10240), MatrixB(20480,10240)
size A : 400
size B : 800
size C : 4
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaDeviceSynchronize    
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 242.93 GFlop/s, Time= 88400.383 msec, Size= 4294967296000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 133.471924(matrixMul)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x408b68
fatCubinHandle : 0x6ada60
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 0: "Tesla K20c" with compute capability 3.5

MatrixA(10240,10240), MatrixB(20480,10240)
size A : 400
size B : 800
size C : 4
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaDeviceSynchronize    
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 242.84 GFlop/s, Time= 88430.281 msec, Size= 4294967296000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 125.668228(matrixMul)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x401ca0
fatCubinHandle : 0x21984c0
[TRACE -runtime-] __cudaRegisterFunction   
gyouretu size : 225000000
[TRACE -runtime-] cudaSetDevice            
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaHostAlloc            
cudaHostAlloc : 0
[TRACE -runtime-] cudaHostAlloc            
cudaHostAlloc : 0
This Sample Application Uses 858[Mbyte] per vector.(Total : 1716[Mbyte])
>Result TEST : PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFreeHost             
[TRACE -runtime-] cudaFreeHost             
Application Closed...
My RESULT : 152.868210
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x401ca0
fatCubinHandle : 0x236e4c0
[TRACE -runtime-] __cudaRegisterFunction   
gyouretu size : 225000000
[TRACE -runtime-] cudaSetDevice            
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaHostAlloc            
cudaHostAlloc : 0
[TRACE -runtime-] cudaHostAlloc            
cudaHostAlloc : 0
This Sample Application Uses 858[Mbyte] per vector.(Total : 1716[Mbyte])
>Result TEST : PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFreeHost             
[TRACE -runtime-] cudaFreeHost             
Application Closed...
My RESULT : 149.514175
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x408b68
fatCubinHandle : 0xd6ea60
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 0: "Tesla K20c" with compute capability 3.5

MatrixA(10240,10240), MatrixB(20480,10240)
size A : 400
size B : 800
size C : 4
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaDeviceSynchronize    
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 129.60 GFlop/s, Time= 165705.359 msec, Size= 4294967296000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 206.424652(matrixMul)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x408b68
fatCubinHandle : 0x2587a60
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 0: "Tesla K20c" with compute capability 3.5

MatrixA(10240,10240), MatrixB(20480,10240)
size A : 400
size B : 800
size C : 4
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaDeviceSynchronize    
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 128.63 GFlop/s, Time= 166949.375 msec, Size= 4294967296000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 206.761276(matrixMul)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x408b68
fatCubinHandle : 0x25bfa60
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 0: "Tesla K20c" with compute capability 3.5

MatrixA(10240,10240), MatrixB(20480,10240)
size A : 400
size B : 800
size C : 4
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaDeviceSynchronize    
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 242.95 GFlop/s, Time= 88391.078 msec, Size= 4294967296000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 133.724258(matrixMul)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x408b68
fatCubinHandle : 0x2525a60
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 0: "Tesla K20c" with compute capability 3.5

MatrixA(10240,10240), MatrixB(20480,10240)
size A : 400
size B : 800
size C : 4
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaDeviceSynchronize    
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 129.01 GFlop/s, Time= 166453.891 msec, Size= 4294967296000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 204.916946(matrixMul)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x408b68
fatCubinHandle : 0x1d23a60
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 0: "Tesla K20c" with compute capability 3.5

MatrixA(10240,10240), MatrixB(20480,10240)
size A : 400
size B : 800
size C : 4
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaDeviceSynchronize    
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 134.60 GFlop/s, Time= 159540.906 msec, Size= 4294967296000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 205.761185(matrixMul)
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x401ca0
fatCubinHandle : 0x242a4c0
[TRACE -runtime-] __cudaRegisterFunction   
gyouretu size : 225000000
[TRACE -runtime-] cudaSetDevice            
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaHostAlloc            
cudaHostAlloc : 0
[TRACE -runtime-] cudaHostAlloc            
cudaHostAlloc : 0
This Sample Application Uses 858[Mbyte] per vector.(Total : 1716[Mbyte])
>Result TEST : PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFreeHost             
[TRACE -runtime-] cudaFreeHost             
Application Closed...
My RESULT : 141.348602
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x401ca0
fatCubinHandle : 0x9ea4c0
[TRACE -runtime-] __cudaRegisterFunction   
gyouretu size : 225000000
[TRACE -runtime-] cudaSetDevice            
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaHostAlloc            
cudaHostAlloc : 0
[TRACE -runtime-] cudaHostAlloc            
cudaHostAlloc : 0
This Sample Application Uses 858[Mbyte] per vector.(Total : 1716[Mbyte])
>Result TEST : PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFreeHost             
[TRACE -runtime-] cudaFreeHost             
Application Closed...
My RESULT : 148.266754
[TRACE -runtime-] __cudaUnregisterFatBinary
[TRACE -runtime-] __cudaRegisterFatBinary  
fatCubin       : 0x408b68
fatCubinHandle : 0xba0a60
[TRACE -runtime-] __cudaRegisterFunction   
[TRACE -runtime-] __cudaRegisterFunction   
[Matrix Multiply Using CUDA] - Starting...
[TRACE -runtime-] cudaGetDevice            
[TRACE -runtime-] cudaGetDeviceProperties  
GPU Device 0: "Tesla K20c" with compute capability 3.5

MatrixA(10240,10240), MatrixB(20480,10240)
size A : 400
size B : 800
size C : 4
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[MOCU] Start mocu_backup()
[MOCU] Finished events update
[MOCU] Finished device backup
[REPLAY] cudaMalloc               
[REPLAY] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
[TRACE -runtime-] cudaMalloc               
Computing result using CUDA Kernel...
done
[TRACE -runtime-] cudaDeviceSynchronize    
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventCreate          
[TRACE -runtime-] cudaEventCreateWithFlags 
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventRecord          
[TRACE -runtime-] cudaEventSynchronize     
[TRACE -runtime-] cudaEventElapsedTime     
Performance= 243.01 GFlop/s, Time= 88371.406 msec, Size= 4294967296000 Ops, WorkgroupSize= 1024 threads/block
Checking computed result for correctness: Result = PASS
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 
[TRACE -runtime-] cudaFree                 

Note: For peak performance, please refer to the matrixMulCUBLAS example.
before calling cudaDeviceReset()
[TRACE -runtime-] cudaDeviceReset          
after calling cudaDeviceReset()
My RESULT : 140.504532(matrixMul)
[TRACE -runtime-] __cudaUnregisterFatBinary
11:54:43
--------------
11:54:43
matrixMul to 0
memcpy    to 1
--------------
Process 1 launch.
--------------
11:54:44
matrixMul to 1
memcpy    to 1
--------------
Process 2 launch.
--------------
11:54:45
matrixMul to 2
memcpy    to 1
--------------
Process 3 launch.
--------------
11:54:46
matrixMul to 3
memcpy    to 1
--------------
Process 4 launch.
--------------
11:54:47
matrixMul to 4
memcpy    to 1
--------------
Process 5 launch.
--------------
11:54:48
matrixMul to 4
memcpy    to 2
--------------
Process 6 launch.
--------------
11:54:50
matrixMul to 4
memcpy    to 3
--------------
Process 7 launch.
--------------
11:54:51
matrixMul to 5
memcpy    to 3
--------------
Process 8 launch.
First Step End...
--------------
11:56:53
matrixMul to 4
memcpy    to 3
--------------
Process 1 finished.
--------------
11:56:53
matrixMul to 4
memcpy    to 4
--------------
Process 9 launch.
--------------
11:56:59
matrixMul to 3
memcpy    to 4
--------------
Process 2 finished.
--------------
11:56:59
matrixMul to 4
memcpy    to 4
--------------
Process 10 launch.
--------------
11:57:01
matrixMul to 4
memcpy    to 3
--------------
Process 3 finished.
--------------
11:57:01
matrixMul to 5
memcpy    to 3
--------------
Process 11 launch.
--------------
11:57:02
matrixMul to 4
memcpy    to 3
--------------
Process 4 finished.
--------------
11:57:02
matrixMul to 5
memcpy    to 3
--------------
Process 12 launch.
--------------
11:57:09
matrixMul to 5
memcpy    to 2
--------------
Process 5 finished.
--------------
11:57:09
matrixMul to 5
memcpy    to 3
--------------
Process 13 launch.
--------------
11:57:19
matrixMul to 5
memcpy    to 2
--------------
Process 6 finished.
--------------
11:57:19
matrixMul to 6
memcpy    to 2
--------------
Process 14 launch.
--------------
11:58:16
matrixMul to 5
memcpy    to 2
--------------
Process 7 finished.
--------------
11:58:16
matrixMul to 6
memcpy    to 2
--------------
Process 15 launch.
--------------
11:58:18
matrixMul to 5
memcpy    to 2
--------------
Process 8 finished.
--------------
11:58:18
matrixMul to 6
memcpy    to 2
--------------
Process 16 launch.
--------------
11:59:13
matrixMul to 5
memcpy    to 2
--------------
Process 9 finished.
--------------
11:59:13
matrixMul to 6
memcpy    to 2
--------------
Process 17 launch.
--------------
11:59:25
matrixMul to 5
memcpy    to 2
--------------
Process 10 finished.
--------------
11:59:25
matrixMul to 5
memcpy    to 3
--------------
Process 18 launch.
--------------
11:59:27
matrixMul to 5
memcpy    to 2
--------------
Process 11 finished.
--------------
11:59:27
matrixMul to 5
memcpy    to 3
--------------
Process 19 launch.
--------------
11:59:39
matrixMul to 5
memcpy    to 2
--------------
Process 12 finished.
--------------
11:59:39
matrixMul to 6
memcpy    to 2
--------------
Process 20 launch.
Second Step End...
--------------
12:00:29
matrixMul to 5
memcpy    to 2
--------------
Process 13 finished.
pid == 20495 finish ... 
--------------
12:00:30
matrixMul to 4
memcpy    to 2
--------------
Process 14 finished.
pid == 20494 finish ... 
--------------
12:01:28
matrixMul to 3
memcpy    to 2
--------------
Process 15 finished.
pid == 20528 finish ... 
--------------
12:01:41
matrixMul to 2
memcpy    to 2
--------------
Process 16 finished.
pid == 20514 finish ... 
--------------
12:01:44
matrixMul to 1
memcpy    to 2
--------------
Process 17 finished.
pid == 20516 finish ... 
--------------
12:01:47
matrixMul to 1
memcpy    to 1
--------------
Process 18 finished.
pid == 20531 finish ... 
--------------
12:01:56
matrixMul to 1
memcpy    to 0
--------------
Process 19 finished.
pid == 20534 finish ... 
--------------
12:02:00
matrixMul to 0
memcpy    to 0
--------------
Process 20 finished.
pid == 20539 finish ... 
Every processes completed!
Result time : 437.000000[sec]
12:02:00
PID == 20412
pos : 0
Proc : 1
Start : 0(0)
End   : 138
Time  : 138(110)
PID == 20414
pos : 1
Proc : 0
Start : 1(0)
End   : 139
Time  : 138(110)
PID == 20430
pos : 2
Proc : 0
Start : 2(1)
End   : 213
Time  : 211(168)
PID == 20446
pos : 3
Proc : 0
Start : 3(2)
End   : 215
Time  : 212(169)
PID == 20448
pos : 4
Proc : 0
Start : 4(3)
End   : 130
Time  : 126(100)
PID == 20450
pos : 5
Proc : 1
Start : 5(4)
End   : 146
Time  : 141(112)
PID == 20454
pos : 6
Proc : 1
Start : 7(5)
End   : 156
Time  : 149(119)
PID == 20457
pos : 7
Proc : 0
Start : 8(6)
End   : 136
Time  : 128(102)
PID == 20482
pos : 8
Proc : 1
Start : 130(104)
End   : 284
Time  : 154(123)
PID == 20485
pos : 9
Proc : 0
Start : 136(108)
End   : 270
Time  : 134(107)
PID == 20494
pos : 10
Proc : 0
Start : 138(110)
End   : 347
Time  : 209(167)
PID == 20495
pos : 11
Proc : 0
Start : 139(111)
End   : 346
Time  : 207(165)
PID == 20499
pos : 12
Proc : 1
Start : 146(116)
End   : 296
Time  : 150(120)
PID == 20503
pos : 13
Proc : 0
Start : 156(124)
End   : 282
Time  : 126(100)
PID == 20514
pos : 14
Proc : 0
Start : 213(170)
End   : 418
Time  : 205(164)
PID == 20516
pos : 15
Proc : 0
Start : 215(172)
End   : 421
Time  : 206(164)
PID == 20528
pos : 16
Proc : 0
Start : 270(216)
End   : 405
Time  : 135(108)
PID == 20531
pos : 17
Proc : 1
Start : 282(225)
End   : 424
Time  : 142(113)
PID == 20534
pos : 18
Proc : 1
Start : 284(227)
End   : 433
Time  : 149(119)
PID == 20539
pos : 19
Proc : 0
Start : 296(236)
End   : 437
Time  : 141(112)
matrixMul       : 13
memcpyIteration : 7
